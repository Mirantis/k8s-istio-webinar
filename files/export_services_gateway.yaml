apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: my-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http2
      protocol: HTTP2
    hosts:
    - "*"
    # tls:
    #   httpsRedirect: true # sends 301 redirect for http requests
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - "*"
    tls:
      credentialName: ingress-cert-staging
      mode: SIMPLE
      privateKey: sds
      serverCertificate: sds

---
##################
# Grafana
##################
---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: grafana-destination-rule
  namespace: istio-system
spec:
  host: grafana.istio-system.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: grafana-virtual-service
  namespace: istio-system
spec:
  hosts:
  - "grafana.mylabs.dev"
  gateways:
  - my-gateway
  http:
  - route:
    - destination:
        host: grafana.istio-system.svc.cluster.local
        port:
          number: 3000
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: grafana-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 15031
      name: http2-grafana
      protocol: HTTP2
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: grafana-vs
  namespace: istio-system
spec:
  hosts:
  - "*"
  gateways:
  - grafana-gateway
  http:
  - match:
    - port: 15031
    route:
    - destination:
        host: grafana.istio-system.svc.cluster.local
        port:
          number: 3000

---
##################
# Jaeger
##################
---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: jaeger-destination-rule
  namespace: istio-system
spec:
  host: tracing.istio-system.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: jaeger-virtual-service
  namespace: istio-system
spec:
  hosts:
  - "jaeger.mylabs.dev"
  gateways:
  - my-gateway
  http:
  - route:
    - destination:
        host: tracing.istio-system.svc.cluster.local
        port:
          number: 16686
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: tracing-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 15032
      name: http2-tracing
      protocol: HTTP2
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: tracing-vs
  namespace: istio-system
spec:
  hosts:
  - "*"
  gateways:
  - tracing-gateway
  http:
  - match:
    - port: 15032
    route:
    - destination:
        host: tracing.istio-system.svc.cluster.local
        port:
          number: 80

---
##################
# Kiali
##################
---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: kiali-destination-rule
  namespace: istio-system
spec:
  host: kiali.istio-system.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kiali-virtual-service
  namespace: istio-system
spec:
  hosts:
  - "kiali.mylabs.dev"
  gateways:
  - my-gateway
  http:
  - route:
    - destination:
        host: kiali.istio-system.svc.cluster.local
        port:
          number: 20001
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: kiali-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 15029
      name: http2-kiali
      protocol: HTTP2
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: kiali-vs
  namespace: istio-system
spec:
  hosts:
  - "*"
  gateways:
  - kiali-gateway
  http:
  - match:
    - port: 15029
    route:
    - destination:
        host: kiali.istio-system.svc.cluster.local
        port:
          number: 20001

---
##################
# Prometheus
##################
---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: prometheus-destination-rule
  namespace: istio-system
spec:
  host: prometheus.istio-system.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: prometheus-virtual-service
  namespace: istio-system
spec:
  hosts:
  - "prometheus.mylabs.dev"
  gateways:
  - my-gateway
  http:
  - route:
    - destination:
        host: prometheus.istio-system.svc.cluster.local
        port:
          number: 9090
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: prometheus-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 15030
      name: http2-prometheus
      protocol: HTTP2
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: prometheus-vs
  namespace: istio-system
spec:
  hosts:
  - "*"
  gateways:
  - prometheus-gateway
  http:
  - match:
    - port: 15030
    route:
    - destination:
        host: prometheus.istio-system.svc.cluster.local
        port:
          number: 9090

---
##################
# Servicegraph
##################
---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: servicegraph-destination-rule
  namespace: istio-system
spec:
  host: servicegraph.istio-system.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: servicegraph-virtual-service
  namespace: istio-system
spec:
  hosts:
  - "servicegraph.mylabs.dev"
  gateways:
  - my-gateway
  http:
  - route:
    - destination:
        host: servicegraph.istio-system.svc.cluster.local
        port:
          number: 8088
